type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

input UsersFilterInput {
    email: String @where(operator: "like")
}

# extend type Query {
#     users(
#         sort: [OrderByClause] @orderBy
#         filter: UsersFilterInput
#     ): [User!]! @paginate(defaultCount: 10)
#     user(id: ID @eq): User @find
# }

# extend type Mutation {
#     createUser(
#         name: String! @rules(apply: ["min:3"]),
#         email: String! @rules(apply: ["email", "unique:users"]) @trim,
#         password: String! @rules(apply: ["min:8"]) @trim @hash,
#     ): User! @create
#     updateUser(
#         id: ID!,
#         name: String @rules(apply: ["min:3"]),
#         email: String @rules(apply: ["email", "unique:users"]) @trim,
#         password: String @rules(apply: ["min:8"]) @trim @hash,
#     ): User! @update
#     deleteUser(id: ID!): User @delete
# }
